#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

# Define app
app=teamspeak
app_wi=teamspeak_wi
version=3.0.12.4
final_path=/home/$app

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC

# Source YunoHost helpers
. /usr/share/yunohost/helpers

# Save app settings
ynh_app_setting_set "$app" domain "$domain"
ynh_app_setting_set "$app" path "$path"
ynh_app_setting_set "$app" is_public "$is_public"

# Check domain/path availability
sudo yunohost app checkurl "${domain}${path}" -a "$app" \
	|| ynh_die "Path not available: ${domain}${path}"

# Create teamspeak user with homefolder
sudo useradd teamspeak -m

# Find architecture and download source
arch=$(uname -m)
if [ $arch = "i386" ] || [ $arch = "i486" ] || [ $arch = "i586" ] || [ $arch = "i686" ];
then
	arch="x86"
	md5_source=4d46994611092199d6ff9cf657d30a12
elif [ $arch = "x86_64" ];
then
	arch="amd64"
	md5_source=5606ed94e50fbacc3f1b8d5bba470afd
else
	echo "ynh_die "${arch} is not a valid architecture.""
fi
sudo wget -q http://dl.4players.de/ts/releases/$version/teamspeak3-server_linux_$arch-$version.tar.bz2 -O /tmp/teamspeakserver.tar.bz2

# Check md5
md5_check=($(md5sum /tmp/teamspeakserver.tar.bz2))
if [ $md5_source != $md5_check ]
then
        ynh_die "the download is corrupted (md5 different)"
fi

# Untar, copy it
sudo tar -xvf /tmp/teamspeakserver.tar.bz2 -C /tmp/
sudo cp -a /tmp/teamspeak3-server_linux_$arch/. $final_path

# Create configuration file
sudo cp ../conf/teamspeak.ini $final_path/teamspeak.ini

# Attribute /home/teamspeak3 to teamspeak user
sudo chown -R teamspeak:teamspeak $final_path

# Add firewall rules
sudo yunohost firewall allow UDP 9987
sudo yunohost firewall allow TCP 10011
sudo yunohost firewall allow TCP 30033

# Enable and start service
sudo cp ../conf/$app.service /lib/systemd/system/$app.service
sudo systemctl daemon-reload
sudo systemctl enable $app.service
sudo systemctl start $app.service
sudo yunohost service add teamspeak -l $final_path/logs/teamspeak_first.log

# Copy teamspeak server web interface
webinterface_final_path=/var/www/$path
sudo mkdir -p $webinterface_final_path
sudo cp -a ../sources/teamspeak_wi. $webinterface_final_path

# Set permissions to teamspeak directory web interface
sudo chown -R www-data: $webinterface_final_path

# Modify Nginx configuration file and copy it to Nginx conf directory
sed -i "s@YNH_WWW_PATH@$path@g" ../conf/nginx.conf
sed -i "s@YNH_WWW_ALIAS@$webinterface_final_path/@g" ../conf/nginx.conf
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app_wi.conf

# If app is public, add url to SSOWat conf as skipped_uris
if [ "$is_public" = "Yes" ];
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set "$app_wi" unprotected_uris "/"
fi

# Restart services
sudo service nginx reload